import json
import pytest
import requests

# === –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö ===
with open("tests/Json_test_samples/api_test_features_collinearity.json") as f:
    features = json.load(f)

with open("tests/Json_test_samples/api_test_labels_collinearity.json") as f:
    labels = json.load(f)

API_URL = "http://127.0.0.1:8000/predict"


# === –°—á—ë—Ç—á–∏–∫–∏ –¥–ª—è –º–µ—Ç—Ä–∏–∫
results = {
    "correct": 0,
    "total": len(features),
    "errors": []
}


# === –ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç ===
@pytest.mark.parametrize("sample,expected", zip(features, labels))
def test_prediction(sample, expected):
    response = requests.post(API_URL, json=sample)
    assert response.status_code == 200

    result = response.json()
    predicted = result["sleep_quality_label"]
    print(f"üîç predicted={predicted}, expected={expected}")

    if predicted == expected:
        results["correct"] += 1
    else:
        results["errors"].append((sample, expected, predicted))

    assert predicted == expected


# === –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ ===
def test_summary():
    accuracy = results["correct"] / results["total"]
    print(f"\nüìä Accuracy: {accuracy:.2%} ({results['correct']}/{results['total']})")
    print(f"\n‚úÖ –ú–æ–¥–µ–ª—å –ø—Ä–æ—à–ª–∞ {results['correct']} –∏–∑ {results['total']} —Ç–µ—Å—Ç–æ–≤")
    print(f"üìä Accuracy: {accuracy:.2%}")
    if results["errors"]:
        print(f"‚ö†Ô∏è –û—à–∏–±–æ–∫: {len(results['errors'])}")
        for i, (sample, expected, predicted) in enumerate(results["errors"]):
            print(f"  [{i+1}] expected={expected}, predicted={predicted}, input={sample}")
