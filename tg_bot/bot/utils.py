import logging


def convert_to_12_hour(value: str) -> float:
    try:
        # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç HH:MM
        value = value.strip()
        if ":" in value:
            hour, minute = value.split(":")
            hour = int(hour)
            minute = int(minute)
            val = hour + minute / 60
        else:
            val = float(value)

        val = int(val) % 24  # –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 0‚Äì23
        return 12 if val == 0 else val % 12 or 12
    except Exception as e:
        logging.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏: {value} ‚Üí {e}")
        return 0.0


def format_answers_for_api(raw: dict) -> dict:
    return {
        "Age": float(raw.get("Age", 0)),
        "Gender": int(raw.get("Gender", 0)),
        "Sleep_duration": float(raw.get("Sleep_duration", 0)),
        "Awakenings": float(raw.get("Awakenings", 0)),
        "Caffeine_consumption": float(raw.get("Caffeine_consumption", 0)),
        "Alcohol_consumption": float(raw.get("Alcohol_consumption", 0)),
        "Smoking_status": int(raw.get("Smoking_status", 0)),
        "Exercise_frequency": float(raw.get("Exercise_frequency", 0)),
        "bed_hour": float(raw.get("bed_hour", 0)),
        "wake_hour": float(raw.get("wake_hour", 0))
    }


def validate_sleep_data(data: dict) -> bool:
    return (
        0 < data["Age"] < 120 and
        0 <= data["Sleep_duration"] <= 24 and
        0 <= data["Awakenings"] <= 20 and
        0 <= data["Caffeine_consumption"] <= 200 and
        0 <= data["Alcohol_consumption"] <= 50 and
        0 <= data["Exercise_frequency"] <= 14 and
        0 < data["bed_hour"] <= 12 and
        0 < data["wake_hour"] <= 12
    )


def generate_advice(data: dict, label: int) -> str:
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Å–Ω–∞
    –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞–Ω–Ω—ã—Ö –∏ –≤–∞–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤.
    """
    advice = ["üí° <b>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>"]

    # --- Awakenings ---
    if data.get("Awakenings", 0) > 2:
        advice.append("‚Ä¢ –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏–π ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø—Ä–æ–≤–µ—Ç—Ä–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É –∏–ª–∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å —É–¥–æ–±–Ω—É—é –ø–æ–¥—É—à–∫—É.")
    elif data.get("Awakenings", 0) == 0:
        advice.append("‚Ä¢ –û—Ç–ª–∏—á–Ω–æ! –í—ã —Å–ø–∏—Ç–µ –±–µ–∑ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏–π ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–π—Ç–µ —ç—Ç–æ—Ç —Ä–µ–∂–∏–º.")

    # --- Alcohol ---
    if data.get("Alcohol_consumption", 0) > 3:
        advice.append("‚Ä¢ –ê–ª–∫–æ–≥–æ–ª—å –ø–µ—Ä–µ–¥ —Å–Ω–æ–º —Å–Ω–∏–∂–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞. –ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –Ω–µ —É–ø–æ—Ç—Ä–µ–±–ª—è—Ç—å –∑–∞ 3‚Äì4 —á–∞—Å–∞ –¥–æ —Å–Ω–∞.")
    elif 0 < data.get("Alcohol_consumption", 0) <= 3:
        advice.append("‚Ä¢ –î–∞–∂–µ —É–º–µ—Ä–µ–Ω–Ω–æ–µ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—è –º–æ–∂–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ñ–∞–∑—ã —Å–Ω–∞.")

    # --- Exercise ---
    if data.get("Exercise_frequency", 0) == 0:
        advice.append("‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –ª—ë–≥–∫—É—é —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å ‚Äî –ø—Ä–æ–≥—É–ª–∫—É –∏–ª–∏ —Ä–∞—Å—Ç—è–∂–∫—É –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è.")
    elif data.get("Exercise_frequency", 0) > 5:
        advice.append("‚Ä¢ –°–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –º–æ–≥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å –ø–µ—Ä–µ—É—Ç–æ–º–ª–µ–Ω–∏–µ. –î–æ–±–∞–≤—å—Ç–µ –¥–µ–Ω—å –æ—Ç–¥—ã—Ö–∞.")

    # --- Smoking ---
    if data.get("Smoking_status", 0) == 1:
        advice.append("‚Ä¢ –ö—É—Ä–µ–Ω–∏–µ —É—Ö—É–¥—à–∞–µ—Ç –Ω–∞—Å—ã—â–µ–Ω–∏–µ –∫–∏—Å–ª–æ—Ä–æ–¥–æ–º –∏ –º–µ—à–∞–µ—Ç –∑–∞—Å—ã–ø–∞–Ω–∏—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–≥–∞—Ä–µ—Ç.")

    # --- Sleep Duration ---
    sleep_dur = data.get("Sleep_duration", 7)
    if sleep_dur < 6:
        advice.append("‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ø–∞—Ç—å –¥–æ–ª—å—à–µ 6 —á–∞—Å–æ–≤. –ù–µ–¥–æ—Å—ã–ø —Å–Ω–∏–∂–∞–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–∑–≥–∞ –∏ –ø–∞–º—è—Ç–∏.")
    elif sleep_dur > 9:
        advice.append("‚Ä¢ –°–ª–∏—à–∫–æ–º –¥–æ–ª–≥–∏–π —Å–æ–Ω —Ç–æ–∂–µ –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ —É—Å—Ç–∞–ª–æ—Å—Ç—å –∏–ª–∏ —Å—Ç—Ä–µ—Å—Å. –û–ø—Ç–∏–º—É–º ‚Äî 7‚Äì9 —á–∞—Å–æ–≤.")

    # --- Wake and Bed Time ---
    wake = data.get("wake_hour", 7)
    bed = data.get("bed_hour", 23)
    # bed ‚Äî —ç—Ç–æ 12-—á–∞—Å–æ–≤–æ–µ –≤—Ä–µ–º—è, –≥–¥–µ 12 = –ø–æ–ª–Ω–æ—á—å
    if bed in [12, 1, 2, 3, 4] or wake < 5:
        advice.append("‚Ä¢ –í—ã –ª–æ–∂–∏—Ç–µ—Å—å –ø–æ–∑–¥–Ω–æ –∏–ª–∏ —Å–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ –≤—Å—Ç–∞—ë—Ç–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ø–∞—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 22:00‚Äì7:00.")
    # --- Age ---
    age = data.get("Age", 25)
    if age > 60:
        advice.append("‚Ä¢ –° –≤–æ–∑—Ä–∞—Å—Ç–æ–º —Å–æ–Ω —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –±–æ–ª–µ–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—ã–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–µ—á–µ—Ä–Ω–∏–µ —Ä–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ (—á–∞–π —Å —Ä–æ–º–∞—à–∫–æ–π, –º–µ–¥–∏—Ç–∞—Ü–∏—è).")
    # --- –ò—Ç–æ–≥ –ø–æ –∫–∞—á–µ—Å—Ç–≤—É —Å–Ω–∞ ---
    if label == 0:
        advice.append("\nüò¥ –í–∞—à —Å–æ–Ω –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ —É–ª—É—á—à–µ–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–≤–µ—Ç–æ–≤ –≤—ã—à–µ.")
    elif label == 1:
        advice.append("\nüåô –£ –≤–∞—Å —Ö–æ—Ä–æ—à–∏–π —Å–æ–Ω! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ.")
    elif label == 2:
        advice.append("\nüåÄ –°–æ–Ω —Å—Ä–µ–¥–Ω–∏–π ‚Äî –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å, –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–≤–µ—Ç–æ–≤ –≤—ã—à–µ.")

    return "\n".join(advice)

